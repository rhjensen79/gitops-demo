name: Staging

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'prep'
      - 'v*.*.*'

permissions:
    contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: App test
        run: |
            echo "Dummy check python code!!!"
            echo "Working"

  build-app:
    needs: test-app
    runs-on: ubuntu-latest
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: registry.tanzu.dk
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            registry.tanzu.dk/webinars/app
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long
          flavor: |
            latest=true
            
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Apply control tag to deployment file
        uses: mark-hartmann/update-deployment-action@develop
        with:
          tag: sha-${{ github.sha }} # refs/tags/ gets automatically removed
          name: app
          deployment: ./staging/deployment.yaml
#
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updated staging deployment file
          file_pattern: "*.yaml"
  